steps:
  - name: "Backend Build"
    image: php:8.2-fpm
    commands:
      - cd portfolio-backend
      - echo "Building the backend..."
      - apt-get update && apt-get install -y \
          libpng-dev libjpeg-dev libfreetype6-dev libzip-dev unzip git curl nginx gnupg2 \
          && docker-php-ext-configure gd --with-freetype --with-jpeg \
          && docker-php-ext-install gd zip pdo pdo_mysql opcache
      - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
          && curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list \
          && apt-get update \
          && ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev \
          && pecl install sqlsrv pdo_sqlsrv \
          && docker-php-ext-enable sqlsrv pdo_sqlsrv
      - composer install --optimize-autoloader --no-dev
      - cp .env.example .env
      - php artisan key:generate
      - php artisan config:cache
      - php artisan route:cache
      - php artisan view:cache
      - chmod -R 775 storage bootstrap/cache
      - chown -R www-data:www-data storage bootstrap/cache

  - name: "Frontend Build"
    image: node:18-alpine
    commands:
      - cd portfolio-frontend
      - echo "Building the frontend..."
      - npm install
      - npm run build

  - name: "Deploy"
    image: drillster/drone-rsync
    settings:
      hosts:
        - your-server
      user: username
      key:
        from_secret: ssh_key  # This is where secret is referenced
      source: ./  # This should be the root directory where the code resides
      target: /path/to/deployment
      recursive: true
      delete: false
      include:
        - portfolio-backend/
        - portfolio-frontend/dist/
      exclude:
        - portfolio-backend/node_modules/
        - portfolio-backend/vendor/
        - portfolio-frontend/node_modules/
        - .git
    when:
      branch: main

  - name: "Restart Services"
    image: appleboy/drone-ssh
    settings:
      host: your-server
      username: username
      key:
        from_secret: ssh_key  # This is where secret is referenced
      port: 22
      script:
        - cd /path/to/deployment
        - docker-compose restart backend
        - docker-compose restart frontend
    when:
      branch: main
      status: success
