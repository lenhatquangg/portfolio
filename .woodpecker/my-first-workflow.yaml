when:
  - event: push
    branch: main
  - event: pull_request

steps:
  - name: backend_build
    image: php:8.2-fpm
    commands:
      - cd portfolio-backend
      - echo "Building the backend..."
      # Cài đặt các gói cơ bản trước
      - apt-get update
      - apt-get install -y gnupg2 apt-transport-https
      # Cài đặt các dependencies cho PHP extensions
      - apt-get install -y libpng-dev libjpeg62-turbo-dev libfreetype6-dev libzip-dev unzip git curl nginx
      # Cấu hình và cài đặt các PHP extensions
      - docker-php-ext-configure gd --with-freetype --with-jpeg
      - docker-php-ext-install gd zip pdo pdo_mysql opcache
      # Cài đặt MSSQL dependencies
      - curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg
      - curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list
      - apt-get update
      - ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev
      - pecl install sqlsrv pdo_sqlsrv
      - docker-php-ext-enable sqlsrv pdo_sqlsrv
      # Cài đặt Composer
      - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      # Cài đặt các dependencies PHP
      - composer install --optimize-autoloader --no-dev
      - cp .env.example .env
      - php artisan key:generate
      - php artisan config:cache
      - php artisan route:cache
      - php artisan view:cache
      - chmod -R 775 storage bootstrap/cache
      - chown -R www-data:www-data storage bootstrap/cache

  - name: frontend_build
    image: node:18-alpine
    commands:
      - cd portfolio-frontend
      - echo "Building the frontend..."
      - npm install
      - npm run build

  - name: deploy
    image: drillster/drone-rsync
    when:
      - event: push
        branch: main
    settings:
      hosts:
        - your-server
      user: username
      source: ./
      target: /path/to/deployment
      recursive: true
      delete: false
      include:
        - portfolio-backend/
        - portfolio-frontend/dist/
      exclude:
        - portfolio-backend/node_modules/
        - portfolio-backend/vendor/
        - portfolio-frontend/node_modules/
        - .git

  - name: restart_services
    image: appleboy/drone-ssh
    when:
      - event: push
        branch: main
        status: success
    settings:
      host: your-server
      username: username
      key:
        from_secret: ssh_key
      port: 22
      script:
        - cd /path/to/deployment
        - docker-compose restart backend
        - docker-compose restart frontend